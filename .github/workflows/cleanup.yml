name: Cleanup

on:
  schedule:
    # Run daily at midnight UTC
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  actions: write
  contents: read

jobs:
  cleanup-caches:
    name: Cleanup Caches
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cleanup Old Caches
        uses: actions/github-script@v7
        with:
          script: |
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            const now = Date.now();
            const maxAge = 7 * 24 * 60 * 60 * 1000; // 7 days
            
            let deletedCount = 0;
            let totalSize = 0;
            
            for (const cache of caches.data.actions_caches) {
              const cacheAge = now - new Date(cache.created_at).getTime();
              
              if (cacheAge > maxAge) {
                await github.rest.actions.deleteActionsCacheById({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  cache_id: cache.id,
                });
                deletedCount++;
                totalSize += cache.size_in_bytes;
              }
            }
            
            core.summary
              .addHeading('🧹 Cache Cleanup Report')
              .addTable([
                [{data: 'Metric', header: true}, {data: 'Value', header: true}],
                ['Caches Deleted', deletedCount.toString()],
                ['Space Freed', `${(totalSize / 1024 / 1024).toFixed(2)} MB`],
                ['Remaining Caches', (caches.data.actions_caches.length - deletedCount).toString()]
              ])
              .write();

  cleanup-artifacts:
    name: Cleanup Artifacts
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cleanup Old Artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });
            
            const now = Date.now();
            const maxAge = 30 * 24 * 60 * 60 * 1000; // 30 days
            
            let deletedCount = 0;
            let totalSize = 0;
            
            for (const artifact of artifacts.data.artifacts) {
              const artifactAge = now - new Date(artifact.created_at).getTime();
              
              if (artifactAge > maxAge) {
                await github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id,
                });
                deletedCount++;
                totalSize += artifact.size_in_bytes;
              }
            }
            
            core.summary
              .addHeading('🗑️ Artifact Cleanup Report')
              .addTable([
                [{data: 'Metric', header: true}, {data: 'Value', header: true}],
                ['Artifacts Deleted', deletedCount.toString()],
                ['Space Freed', `${(totalSize / 1024 / 1024).toFixed(2)} MB`],
                ['Remaining Artifacts', (artifacts.data.artifacts.length - deletedCount).toString()]
              ])
              .write();

  cleanup-old-workflow-runs:
    name: Cleanup Old Workflow Runs
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Delete Old Workflow Runs
        uses: actions/github-script@v7
        with:
          script: |
            const workflows = await github.rest.actions.listRepoWorkflows({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            const now = Date.now();
            const maxAge = 90 * 24 * 60 * 60 * 1000; // 90 days
            let totalDeleted = 0;
            
            for (const workflow of workflows.data.workflows) {
              const runs = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: workflow.id,
                per_page: 100
              });
              
              for (const run of runs.data.workflow_runs) {
                const runAge = now - new Date(run.created_at).getTime();
                
                if (runAge > maxAge && run.status === 'completed') {
                  await github.rest.actions.deleteWorkflowRun({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    run_id: run.id,
                  });
                  totalDeleted++;
                }
              }
            }
            
            core.summary
              .addHeading('🔄 Workflow Runs Cleanup Report')
              .addTable([
                [{data: 'Metric', header: true}, {data: 'Value', header: true}],
                ['Workflow Runs Deleted', totalDeleted.toString()],
                ['Age Threshold', '90 days']
              ])
              .write();

  cleanup-packages:
    name: Cleanup Old Package Versions
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Delete Old Package Versions
        uses: actions/github-script@v7
        with:
          script: |
            core.summary
              .addHeading('📦 Package Cleanup Report')
              .addRaw('Package version cleanup requires GitHub Packages. Skipping for npm registry.')
              .write();

  storage-report:
    name: Storage Report
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: [cleanup-caches, cleanup-artifacts, cleanup-old-workflow-runs]
    steps:
      - name: Generate Storage Report
        uses: actions/github-script@v7
        with:
          script: |
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            const totalCacheSize = caches.data.actions_caches.reduce((sum, cache) => sum + cache.size_in_bytes, 0);
            const totalArtifactSize = artifacts.data.artifacts.reduce((sum, artifact) => sum + artifact.size_in_bytes, 0);
            
            core.summary
              .addHeading('💾 Storage Usage Report')
              .addTable([
                [{data: 'Storage Type', header: true}, {data: 'Count', header: true}, {data: 'Size', header: true}],
                ['Caches', caches.data.actions_caches.length.toString(), `${(totalCacheSize / 1024 / 1024).toFixed(2)} MB`],
                ['Artifacts', artifacts.data.artifacts.length.toString(), `${(totalArtifactSize / 1024 / 1024).toFixed(2)} MB`],
                ['Total', '', `${((totalCacheSize + totalArtifactSize) / 1024 / 1024).toFixed(2)} MB`]
              ])
              .write();
