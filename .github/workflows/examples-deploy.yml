name: Deploy Examples

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  deployments: write
  pull-requests: write

jobs:
  deploy-playground:
    name: Deploy Playground to Vercel
    runs-on: ubuntu-latest
    if: false  # Disabled by default - requires VERCEL_TOKEN and VERCEL_PLAYGROUND_PROJECT_ID secrets
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Packages
        run: pnpm build

      - name: Build Playground
        run: |
          cd apps/playground
          pnpm build

      - name: Deploy to Vercel (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PLAYGROUND_PROJECT_ID }}
          working-directory: ./apps/playground
          vercel-args: '--prod'

      - name: Deploy to Vercel (Preview)
        if: github.event_name == 'pull_request'
        uses: amondnet/vercel-action@v25
        id: vercel-preview
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PLAYGROUND_PROJECT_ID }}
          working-directory: ./apps/playground

      - name: Comment PR with Playground URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const url = '${{ steps.vercel-preview.outputs.preview-url }}';
            const body = `## ðŸŽ® Playground Preview Deployed
            
            Your playground application has been deployed to Vercel:
            
            ðŸ”— **Preview URL**: ${url}
            
            Test your changes in a live environment.
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  deploy-examples:
    name: Deploy Examples to Vercel
    runs-on: ubuntu-latest
    if: false  # Disabled by default - requires VERCEL_TOKEN and VERCEL_EXAMPLES_PROJECT_ID secrets
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Packages
        run: pnpm build

      - name: Build Examples
        run: |
          cd apps/examples
          pnpm build || echo "No build script found for examples"

      - name: Deploy Examples to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_EXAMPLES_PROJECT_ID }}
          working-directory: ./apps/examples
          vercel-args: '--prod'

  deployment-summary:
    name: Deployment Summary
    runs-on: ubuntu-latest
    if: false  # Disabled when deployment jobs are disabled
    needs: [deploy-playground, deploy-examples]
    if: always()
    steps:
      - name: Create Deployment Summary
        run: |
          echo "## ðŸš€ Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Application | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Playground | ${{ needs.deploy-playground.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Examples | ${{ needs.deploy-examples.result }} |" >> $GITHUB_STEP_SUMMARY
